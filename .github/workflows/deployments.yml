--- # Time-stamp: <2022-09-17 19:09:05>

name: 10 Manual Deployment

'on':
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Deployment targets (choose one)
        required: true
        default: deploy-k8s-dev
        type: choice
        options:
          - deploy-k8s-dev
          - deploy-k8s-test
          - deploy-k8s-prod
      git_ref:
        description: Git ref (optional) # The branch, tag or SHA to checkout
        required: false

jobs:
  helper:
    uses: ./.github/workflows/migration-helper01.yml
  deploy:
    name: '${{ github.event.inputs.deployment_target }}'
    runs-on: ubuntu-latest
    needs: helper
    steps:
      - name: Cloning repository (HEAD)
        uses: actions/checkout@v3
        if: github.event.inputs.git_ref == ''
      - name: 'Cloning repository (${{ github.event.inputs.git_ref }})'
        uses: actions/checkout@v3
        if: github.event.inputs.git_ref != ''
        with:
          ref: '${{ github.event.inputs.git_ref }}'

      - name: Extracting metadata from a cloned repository
        id: get-cloned
        run: |-
          echo "::set-output name=SHA::$(git log -1 --format='%H')"
          echo "::set-output name=REF::$(git symbolic-ref HEAD 2>/dev/null)"

      # - name: Download artifact(s)
      #   id: download-artifact
      #   uses: konturio/action-download-artifact@v2
      #   with:
      #     workflow: main.yml
      #     workflow_conclusion: success
      #     commit: '${{steps.get-cloned.outputs.SHA}}'
      #     name: 'event-api-${{needs.helper.outputs.CI_COMMIT_REF_SLUG}}'

      # - name: Preparing Ansible's environment
      #   if: >-
      #     'deploy-k8s-dev' == github.event.inputs.deployment_target
      #     || 'deploy-k8s-test' == github.event.inputs.deployment_target
      #     || 'deploy-k8s-prod' == github.event.inputs.deployment_target
      #   run: |-
      #     set -e
      #
      #     wget -q https://kontur-github-runners.s3.eu-central-1.amazonaws.com/public_resources/projects/common/2022091500.tar.xz && tar -C "$HOME" -xf 2022091500.tar.xz && rm 2022091500.tar.xz
      #
      #     sudo mkdir -p -m 0755 /etc/ansible && sudo wget -q --no-use-server-timestamps -O /etc/ansible/hosts "https://kontur-github-runners.s3.eu-central-1.amazonaws.com/public_resources/ROOT--etc--ansible/hosts"
      #
      #     mkdir -p -m 0700 ~/.ssh
      #     cat > ~/.ssh/id_ed25519 <<"EOF"
      #     ${{ secrets.DEPLOYER_PRIVATE_KEY }}
      #     EOF
      #     chmod 0600 ~/.ssh/id_ed25519
      #
      #     sudo tee /etc/ansible/ansible.cfg <<EOF
      #     [defaults]
      #     # (boolean) Set this to "False" if you want to avoid host key checking by the underlying tools Ansible uses to connect to the host
      #     host_key_checking=False
      #     EOF

      - name: deploy-k8s-dev
        if: "'deploy-k8s-dev' == github.event.inputs.deployment_target"
        env:
          CLIENT_CERT: ${{ secrets.K8S_CLIENT_CERT_DEV }}
          CLIENT_KEY: ${{ secrets.K8S_CLIENT_KEY_DEV }}
        run: |-
          kubectl version
      #   run: >
      #     ansible-playbook -vD -e "version=${{needs.helper.outputs.CI_COMMIT_REF_SLUG}}-${{github.run_id}}
      #     path_to_dist=$(find $GITHUB_WORKSPACE -maxdepth 1 -name \*.zip -print -quit)"
      #     --limit=dev_event_api ansible/deploy.yml
      #
      # - name: deploy-k8s-test
      #   if: "'deploy-k8s-test' == github.event.inputs.deployment_target"
      #   run: >
      #     ansible-playbook -vD -e "version=${{needs.helper.outputs.CI_COMMIT_REF_SLUG}}-${{github.run_id}}
      #     path_to_dist=$(find $GITHUB_WORKSPACE -maxdepth 1 -name \*.zip -print -quit)"
      #     --limit=test_event_api ansible/deploy.yml
      #
      # - name: deploy-k8s-prod
      #   if: "'deploy-k8s-prod' == github.event.inputs.deployment_target"
      #   run: >
      #     ansible-playbook -vD -e "version=${{needs.helper.outputs.CI_COMMIT_REF_SLUG}}-${{github.run_id}}
      #     path_to_dist=$(find $GITHUB_WORKSPACE -maxdepth 1 -name \*.zip -print -quit)"
      #     --limit=dev_event_api ansible/deploy.yml
