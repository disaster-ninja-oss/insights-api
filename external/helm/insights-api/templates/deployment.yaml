apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.envName }}-insights-api
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: insights-api
    app.kubernetes.io/instance: {{ .Values.envName }}-insights-api
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/managed-by: "Helm"
    stage: {{ .Values.envName }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: insights-api
      app.kubernetes.io/instance: {{ .Values.envName }}-insights-api
      #don't add app.kubernetes.io/version
      app.kubernetes.io/managed-by: "Helm"
      stage: {{ .Values.envName }}
  replicas: 2
  #TODO affinity/antiAffinity?
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: insights-api
        app.kubernetes.io/instance: {{ .Values.envName }}-insights-api
        app.kubernetes.io/version: {{ .Chart.Version }}
        app.kubernetes.io/managed-by: "Helm"
        stage: {{ .Values.envName }}
      annotations:
        meta.helm.sh/release-name: {{ .Release.Name }}
        meta.helm.sh/release-namespace: {{ .Release.Namespace }}
        rollme: {{ randAlphaNum 5 | quote }} #random value that makes Helm restart pods on any upgrade
    spec:
      containers:
        - name: insights-api
          image: nexus.kontur.io:8085/konturdev/insights-api:{{ .Chart.Version }}
          imagePullPolicy: Always #don't use Always for local minikube - otherwise it tries reloading from remote
          resources:
            requests:
              cpu: "1"
              memory: "6G"
            {{ if eq .Values.envName "prod" }}
            limits:
              memory: "12G"
            {{ else }}
            #resource limits are not specified for non-prod stages so that they have lower priority
            {{ end }}
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/instance']
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://$(MY_NODE_NAME):4317
          envFrom:
            - configMapRef:
                name: {{ .Values.envName }}-insights-api
            - secretRef:
                name: {{ .Values.envName }}-insights-api #TODO must contain SPRING_DATASOURCE_PASSWORD
          readinessProbe:
            httpGet:
              path: /insights-api/health/readiness
              port: 8625
            failureThreshold: 1
            periodSeconds: 60
            initialDelaySeconds: 30
---