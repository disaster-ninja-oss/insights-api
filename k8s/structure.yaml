apiVersion: apps/v1
kind: Deployment
metadata:
  name: insights-api-dev
  namespace: sandbox-isemichastnov
  labels:
    app.kubernetes.io/name: insights-api
    app.kubernetes.io/instance: insights-api-dev
    #TODO app.kubernetes.io/version?
    stage: dev
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: insights-api
      app.kubernetes.io/instance: insights-api-dev
      #TODO app.kubernetes.io/version?
      #TODO other labels (stage)?
  replicas: 2
  #TODO affinity/antiAffinity?
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: insights-api
        app.kubernetes.io/instance: insights-api-dev
        #TODO app.kubernetes.io/version?
    spec:
      containers:
        - name: insights-api
          #todo version and imagePullPolicy
          image: nexus.kontur.io:8085/konturdev/insights-api:0.0.1-SNAPSHOT #todo check if 8085 is ok
          imagePullPolicy: IfNotPresent #don't use Always for local minikube - otherwise it tries reloading from remote
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: dev
          envFrom:
            - configMapRef:
                name: insights-api-dev
            - secretRef:
                name: insights-api-dev #TODO must contain data:spring.datasource.password
---
apiVersion: v1
kind: Service
metadata:
  name: insights-api-dev
  namespace: sandbox-isemichastnov
  labels:
    app.kubernetes.io/name: insights-api
    app.kubernetes.io/instance: insights-api-dev
    stage: dev
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: insights-api
    app.kubernetes.io/instance: insights-api-dev
    #TODO other labels (stage)?
  ports:
    - port: 8625
      targetPort: 8625
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: insights-api-dev-database
  namespace: sandbox-isemichastnov
  labels:
    app.kubernetes.io/name: insights-api-database
    app.kubernetes.io/instance: insights-api-dev-database
    stage: dev
spec:
  type: ExternalName
  externalName: milan.kontur.io
#  externalName: docker.for.mac.host.internal #todo for local dev
  ports:
    - port: 5432
---