<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.kontur</groupId>
    <artifactId>insights-api</artifactId>
    <version>0.18.1</version>
    <name>insights-api</name>
    <description>Kontur Insights API</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.7</version>
    </parent>

    <properties>
        <image.tag>${IMAGE_TAG}</image.tag>
        <java.version>16</java.version>
        <maven.compiler.release>16</maven.compiler.release>
        <project.resource.directory>src/main/resources</project.resource.directory>

        <spring-retry.version>1.3.4</spring-retry.version>
        <spring-aspects.version>5.3.23</spring-aspects.version>
        <springdoc-openapi-ui.version>1.6.11</springdoc-openapi-ui.version>
        <liquibase-core.version>4.16.1</liquibase-core.version>
        <lombok.version>1.18.24</lombok.version>
        <graphql-spring-boot.version>14.0.0</graphql-spring-boot.version>
        <graphiql-spring-boot.version>11.1.0</graphiql-spring-boot.version>
        <graphql-java-extended-scalars.version>19.0</graphql-java-extended-scalars.version>
        <postgresql.version>42.5.0</postgresql.version>
        <jts2geojson.version>0.17.0</jts2geojson.version>
        <guava.version>31.1-jre</guava.version>
        <postgresql-testcontainers.version>1.17.4</postgresql-testcontainers.version>
        <commons-fileupload.version>1.4</commons-fileupload.version>

        <micrometer-registry-prometheus.version>1.9.4</micrometer-registry-prometheus.version>

        <maven-failsafe-plugin.version>3.0.0-M6</maven-failsafe-plugin.version>
        <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
        <maven-dependency-plugin.version>3.3.0</maven-dependency-plugin.version>
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>

        <jib.source.image>openjdk:16-alpine</jib.source.image>

        <jackson-bom.version>2.14.0-rc2</jackson-bom.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
            <version>${spring-retry.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring-aspects.version}</version>
        </dependency>

        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase-core.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.graphql-java-kickstart</groupId>
            <artifactId>graphql-spring-boot-starter</artifactId>
            <version>${graphql-spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>com.graphql-java-kickstart</groupId>
            <artifactId>graphiql-spring-boot-starter</artifactId>
            <version>${graphiql-spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java-extended-scalars</artifactId>
            <version>${graphql-java-extended-scalars.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>

        <dependency>
            <groupId>org.wololo</groupId>
            <artifactId>jts2geojson</artifactId>
            <version>${jts2geojson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc-openapi-ui.version}</version>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${micrometer-registry-prometheus.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
            <version>${postgresql-testcontainers.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-jackson</artifactId>
            <version>0.1.5</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-json-classic</artifactId>
            <version>0.1.5</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson</groupId>
            <artifactId>jackson-bom</artifactId>
            <version>${jackson-bom.version}</version>
            <type>pom</type>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                    <runOrder>alphabetical</runOrder>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Build-Time>${maven.build.timestamp}</Implementation-Build-Time>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <!-- Copy dependencies for runnable app archive packaging -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>io.kontur.common</groupId>
                                    <artifactId>systemd-service-wrapper</artifactId>
                                    <version>1.0.8</version>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/unpacked</outputDirectory>
                                    <includes>**/*.sh</includes>
                                    <excludes>**/*.xml</excludes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>16</source>
                    <target>16</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.6.8</version>
                <executions>
                    <execution>
                        <id>download-opentelemetry-agent</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <url>https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.16.0/opentelemetry-javaagent.jar</url>
                    <unpack>false</unpack>
                    <outputDirectory>${project.build.sourceDirectory}/../jib/opentelemetry/</outputDirectory>
                    <md5>4f97ebd74d075e60c76ecdf47b61006a</md5>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <container>
                        <mainClass>io.kontur.insightsapi.InsightsApiApplication</mainClass>
                        <jvmFlags>
                            <jvmFlag>-javaagent:/opentelemetry/opentelemetry-javaagent.jar</jvmFlag>
                            <jvmFlag>-Dlogging.config=classpath:logback-stdout-json.xml</jvmFlag>
                            <jvmFlag>-server</jvmFlag>
                            <jvmFlag>-XX:MaxRAMPercentage=50</jvmFlag>
                            <jvmFlag>-XX:+HeapDumpOnOutOfMemoryError</jvmFlag>
                            <jvmFlag>-XX:HeapDumpPath=/tmp/insights_api_oom.hprof</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote.ssl=false</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote.authenticate=false</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote.port=5000</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote.rmi.port=5000</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote=true</jvmFlag>
                            <jvmFlag>-Djava.rmi.server.hostname=127.0.0.1</jvmFlag>
                        </jvmFlags>
                    </container>
                    <from>
                        <image>nexus.kontur.io:8084/library/${jib.source.image}</image>
                    </from>
                    <to>
                        <image>nexus.kontur.io:8085/konturdev/${project.name}:${image.tag}</image>
                    </to>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>local-minikube</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>3.2.1</version>
                        <configuration>
                            <dockerClient>
                                <environment>
                                    <DOCKER_TLS_VERIFY>1</DOCKER_TLS_VERIFY>
                                    <DOCKER_HOST>${DOCKER_HOST}</DOCKER_HOST>
                                    <DOCKER_CERT_PATH>${DOCKER_CERT_PATH}</DOCKER_CERT_PATH>
                                    <MINIKUBE_ACTIVE_DOCKERD>minikube</MINIKUBE_ACTIVE_DOCKERD>
                                </environment>
                            </dockerClient>
                            <from>
                                <image>nexus.kontur.io:8084/library/${jib.source.image}</image>
                            </from>
                            <to>
                                <image>nexus.kontur.io:8085/konturdev/${project.name}:${project.version}</image>
                            </to>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>kontur</id>
            <url>https://nexus.kontur.io/repository/common/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>kontur</id>
            <url>https://nexus.kontur.io/repository/common/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <id>kontur-releases</id>
            <url>https://nexus.kontur.io/repository/common-releases/</url>
        </repository>
        <snapshotRepository>
            <id>kontur-snapshots</id>
            <url>https://nexus.kontur.io/repository/common-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

</project>
