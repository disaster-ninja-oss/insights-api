server:
  servlet:
    contextPath: /insights-api
  port: 8625
  shutdown: graceful

spring:
  main:
    lazy-initialization: true
  datasource:
    driver-class-name: org.postgresql.Driver
    url: 'jdbc:postgresql://localhost:5432/postgres'
    username: postgres
    password: postgres
    hikari:
      register-mbeans: true
      pool-name: HikariPool-1
      connection-timeout: 60000
      validation-timeout: 1000
      maximum-pool-size: 10
  jdbc:
    template:
      query-timeout: 1800
  liquibase:
    change-log: classpath:db/changelog/master-changelog.xml
  lifecycle:
    timeout-per-shutdown-phase: 310s
  cache:
    type: redis
    cache-names: urban-core, thermal-spot, population, osm-quality, humanitarian-impact, functions, correlation-rate-all,
      metrics-num-den, metrics-num-den-with-uuid, correlation-rate-polygon, correlation-rate-polygon-all,
      metrics-num-not-empty-layers, advanced-analytics-all, advanced-analytics, covariance-rate-all, covariance-rate-polygon
    redis:
      time-to-live: 86400s
  redis:
    host: localhost
    port: 6379
  servlet:
    multipart:
      enabled: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://keycloak01.kontur.io/realms/kontur
          jwk-set-uri: https://keycloak01.kontur.io/realms/kontur/protocol/openid-connect/certs

springdoc:
  packages-to-scan: io.kontur.insightsapi.controller
  swagger-ui:
    path: 'doc'

graphql:
  servlet:
    corsEnabled: false
    tracing-enabled: false #11653
    actuator-metrics: true
    async:
      timeout: 1800s
  tools:
    schema-location-pattern: graphql/*.graphqls

management:
  metrics:
    export:
      simple:
        enabled: false
  health:
    db:
      enabled: true
    ping:
      enabled: false
    diskspace:
      enabled: false
    refresh:
      enabled: false
  endpoint:
    health:
      status:
        http-mapping:
          down: 200
      cache:
        time-to-live: 10s
      show-details: always
      show-components: always
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
      base-path: /
      path-mapping:
        prometheus: metrics

bivatiateMatrix:
  highCorrelationLevel: 0.75

cache:
  functions: true
  humanitarian-impact: true
  osm-quality: true
  population: true
  thermal-spot: true
  urban-core: true
  correlation-rate: true
  advanced-analytics: true
  covariance-rate: true
  metrics: true

graphql-request:
  parser-options:
    max-tokens: 0x7fffffff #Integer.MAX_VALUE

calculations:
  useStatSeparateTables: true
  # TODO: temp configuration, delete when we have final version of transposed table
  bivariate:
    transposed:
      table: stat_h3_transposed
    indicators:
      table: bivariate_indicators
      test:
        table: bivariate_indicators_metadata
  # TODO: temp configuration, delete when we have final version of transposed table
    axis:
      table: bivariate_axis
      test:
        table: bivariate_axis_v2
    correlations:
      table: bivariate_axis_correlation
      test:
        table: bivariate_axis_correlation_v2
  tiles:
    tile-size: 512
    hex-edge-pixels: 5
    max-h3-resolution: 8
    min-h3-resolution: 0
    max-zoom: 15
    min-zoom: 0

sentry:
  dsn: https://fixme@dsn.ingest.sentry.io/project-id
  # Set traces-sample-rate to 1.0 to capture 100% of transactions for performance monitoring.
  # We recommend adjusting this value in production.
  traces-sample-rate: 1.0
